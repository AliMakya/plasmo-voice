plugins {
    id 'fabric-loom' version '0.8-SNAPSHOT'
    id 'maven-publish'
    id "com.github.johnrengelman.shadow" version "7.0.0"
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation(include("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"))

    modImplementation(include("net.fabricmc.fabric-api:fabric-api-base:0.3.0+c88702897d"))
    modImplementation(include("net.fabricmc.fabric-api:fabric-lifecycle-events-v1:1.4.4+a02b4463d5"))
    modImplementation(include("net.fabricmc.fabric-api:fabric-key-binding-api-v1:1.0.4+a02b4463d5"))
    modImplementation(include("net.fabricmc.fabric-api:fabric-rendering-v1:1.6.0+a02b4463d5"))
    modImplementation(include("net.fabricmc.fabric-api:fabric-resource-loader-v0:0.4.7+b7ab6121d5"))
    modImplementation(include("net.fabricmc.fabric-api:fabric-command-api-v1:1.1.1+bb687600d1"))

    implementation "su.plo.voice:common:1.0.0"
    shadow "su.plo.voice:common:1.0.0"

    implementation "su.plo.voice:opus:1.1.0"
    shadow "su.plo.voice:opus:1.1.0"
}

repositories {
    maven {
        url "https://repo.plo.su"
    }
    jcenter()
}

processResources {
    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "loader_version": project.loader_version,
                "fabric_version": project.fabric_version
    }

    filesMatching("compatibility.properties") {
        expand "mod_compatibility_version": project.mod_compatibility_version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {}

//shadowJar {
//    configurations = [project.configurations.shadow]
//}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}

shadowJar {
    configurations = [project.configurations.shadow]
    classifier 'shadow-dev'
    relocate 'com.sun.jna', "com.sun.jna"
}

remapJar {
    dependsOn shadowJar
    input.set shadowJar.archiveFile.get()
}