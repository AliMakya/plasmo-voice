buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        mavenCentral()
        mavenLocal()
        // Mixin
        maven { url = 'https://repo.spongepowered.org/maven' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        // Mixin
        classpath 'org.spongepowered:mixingradle:0.8-SNAPSHOT'
    }
}

plugins {
    id "com.github.johnrengelman.shadow" version "7.0.0"
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'idea'
apply plugin: 'org.spongepowered.mixin'

version = '1.1.0'
group = "su.plo.voice" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'plasmovoice-forge'

java.toolchain.languageVersion = JavaLanguageVersion.of(16)

minecraft {
    mappings channel: 'official', version: '1.17.1'

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            args = ['--username', 'GNOME__']

            // Mixin
            arg "-mixin.config=plasmovoice.mixins.json"

            mods {
                plasmovoice {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            // Mixin
            arg "-mixin.config=plasmovoice.mixins.json"

            mods {
                plasmovoice {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            args '--mod', "plasmovoice", '--all', '--output', file('src/generated/resources/')

            mods {
                plasmovoice {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft "net.minecraftforge:forge:1.17.1-37.0.73"

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'

    compileOnly 'org.spongepowered:mixin:0.8.3'
    annotationProcessor 'org.spongepowered:mixin:0.8.3:processor'

    implementation "su.plo.voice:common:1.0.0"
    shadow "su.plo.voice:common:1.0.0"

    implementation "su.plo.voice:opus:1.1.1"
    shadow "su.plo.voice:opus:1.1.1"

    implementation "su.plo.voice:rnnoise:1.0.0"
    shadow "su.plo.voice:rnnoise:1.0.0"
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "plasmovoice",
                "Specification-Vendor"    : "Plasmo",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "`Plasmo`",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                // Mixin
                "MixinConfigs": "plasmovoice.mixins.json"
        ])
    }
}

repositories {
    mavenLocal()
    maven {
        url "https://repo.plo.su"
    }
    // Mixin
    maven { url = 'https://repo.spongepowered.org/maven' }
}

shadowJar {
    configurations = [project.configurations.shadow]
    classifier ''
    dependencies {
        exclude(dependency('net.java.dev.jna:jna'))
        exclude(dependency('org.slf4j:slf4j-api'))
    }
}

task sourcesJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allJava
}

reobf {
    shadowJar {}
}

jar.finalizedBy('reobfJar')

mixin {
    add sourceSets.main, "plasmovoice.refmap.json"
}